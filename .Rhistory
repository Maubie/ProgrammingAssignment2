pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant2.R')
source("pollutant2.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("/Users/jonathanmoore")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("/Users/jonathanmoore")
getwd()
source('~/pollutant2.R')
getwd()
source("pollutant2.R")
pollutantmean("specdata", "sulfate", 1:10)
getwd()
directory<-"specdata"
working_directory<-paste(""", directory,""")
working_directory<-paste(""", directory,""", sep="")
working_directory<-paste(", directory,", sep="")
working_directory
working_directory<-paste("'", directory,"'", sep="")
working_directory
working_directory<-paste("", directory,"", sep="")
working_directory
source('~/pollutant2.R')
pollutantmean("specdata", "sulfate", 1:10)
getwd()
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE, sep="\t")
}
if(exists('dataset')) {
temp_dataset <- read.csv(file, header=TRUE, sep="\t")
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
dataset
dataset <-na.omit(dataset[dataset[["ID"]]%in% ids,])
dataset <-na.omit()
datset<-na.omit(dataset)
dataset
final.dataset<-filter(dataset, ID%in%id)
ID
ID<-[1:10]
ID,-c(1:10)
ID<-1:10
ID
final.dataset<-filter(dataset, ID%in%id)
mean ( paste("mydata","$",pollutant, sep=""), na.rm=TRUE)
mean ( paste("dataset","$",pollutant, sep=""), na.rm=TRUE)
mean(dataset$sulfate, na.rm=TRUE)
list.files()
checkdata<- read.csv("001.csv", header=TRUE, sep="\t")
checkdata
checkdata2<- read.csv("001.csv")
checkdata2
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file)
}
if(exists('dataset')) {
temp_dataset <- read.csv(file)
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
checkdata3<-rbind("001.csv", "002.csv")
checkdata3
read.csv("002.csv")
c<-rbind(dataset,dataset1)
?"read.csv"
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE )
}
if(exists('dataset')) {
temp_dataset <- read.csv(file, header=TRUE)
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE, as.is=1 )
}
if(exists('dataset')) {
temp_dataset <- read.csv(file, header=TRUE, as.is=1)
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
file1<-read.csv(001.csv)
file1<-read.csv("001.csv")
file2<-read.csv("002.csv")
ds<-rbind(file1,file2)
ds
file_list <- list.files(1:10)
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE, as.is=1 )
}
if(exists('dataset')) {
temp_dataset <- read.csv(file, header=TRUE, as.is=1)
dataset <- rbind(dataset, temp_dataset)
rm(temp_dataset)
}
}
getwd()
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE)
}
file_list
file_list
dataset
data<-read.csv("001.csv", header=T)
data
for(file in file_list){}
source('~/pollutant2.R')
setwd("Users/jonathanmoore")
getwd()
setwd("/Users/jonathanmoore")
file_list <- list.files()
for(file in file_list) {
if(!exists('dataset')) {
dataset <- read.csv(file, header=TRUE)
}
source('~/pollutant2.R')
pollutantmean("specdata", "sulfate", 1:10)
getwd()
dataset
setwd("/Users/jonathanmoore")
source('~/pollutant2.R')
pollutantmean("specdata", "sulfate", 1:3)
getwd()
setwd("/Users/jonathanmoore")
source('~/pollutant2.R')
pollutantmean("specdata", "sulfate", 1:10)
getwd()
setwd("/Users/jonathanmoore")
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
dataset
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
?"mean"
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
final_data
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
source('~/pollutant3.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
?"count()?
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
?"complete.cases()"
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
source('~/complete1.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
?"data.frame"
?"cor()
?"cor()"
?"cor"
source('~/cor.R')
corr("specdata", 0)
cr<-corr("specdata", 0)
source('~/cor.R')
corr("specdata", 0)
source('~/cor.R')
corr("specdata", 0)
threshold_check_data
threshold_check
complete_dataset
dataset
complete_dataset
source('~/cor.R')
corr("specdata", 0)
complete_dataset
source('~/cor.R')
source('~/cor.R')
corr("specdata", 0)
source('~/cor.R')
corr("specdata", 0)
source('~/complete.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
results
output
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
?"subset()'
?"subset()"
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source('~/cor.R')
corr("specdata", 1000)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary)cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
head(complete_dataset)
?"head"
head(complete_dataset,)
complete_dataset
for(i in 30:20){ x<-i print(x)}
source('~/complete1.R')
complete("specdata", 30:25)
source('~/complete1.R')
complete("specdata", 30:25)
length(id)
x<-30:25
length(x)
x
source('~/complete1.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('~/complete1.R')
complete("specdata", 30:25)
source('~/complete1.R')
complete("specdata", 30:25)
head(dataset)
source('~/complete1.R')
complete("specdata", 30:25)
?"rbind()
?"rbind()"
?"rbind"
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
?"colnames"
?"table"
?"na.omit"
source('~/test.R')
complete("specdata", 30:29)
source('~/test.R')
complete("specdata", 30:29)
?"sort"
?"table"
source('~/test.R')
complete("specdata", 30:29)
source('~/test.R')
complete("specdata", 30:29)
source('~/test.R')
complete("specdata", 30:29)
source('~/test.R')
source('~/test.R')
complete("specdata", 30:29)
source('~/test.R')
complete("specdata", 30:29)
?"as.data.table"
source('~/test.R')
complete("specdata", 30:29)
complete("specdata", c(30,29, 31))
source('~/test.R')
complete("specdata", c(30, 29, 28, 31))
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
?"order"
source('~/test.R')
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
?"data.frame"
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
?"rbind"
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:28)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
temp_dataset
source('~/test.R')
complete("specdata", 30:27)
temp_dataset
complete_dataset
complete_dataset
dataset
complete_dataset
source('~/test.R')
complete("specdata", 30:27)
complete_dataset
source('~/test.R')
complete("specdata", 30:27)
output
source('~/complete1.R')
complete("specdata", 30:27)
complete_dataset
length(complete_dataset$30)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
source('~/test.R')
complete("specdata", 30:27)
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library(datasets)
data("iris")
?iris
lapply(iris$Sepal.Length, mean(virginia) {virginia=Sepal.Length$virginica})
iris$Sepal.Length
s<- split(iris, iris$Species)
lapply(s, colMeans(x[, c("Sepal.Length")]))
> lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]))
> lapply(s, colMeans(x[, c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width")]))
library(datasets)
data(mtcars)
tapply(mtcars$cyl, mtcars4mpg, mean)
tapply(mtcars$cyl, mtcars$mgp, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
x<- sapply(split(mtcars$hp, mtcars$cyl), mean)
x
y<- 209.21429-82.63636
y
debug(ls)
ls
## This function computes the inverse of the special "matrix" returned by makeCacheMatrix above. If the inverse has already been calculated (and the matrix has not changed), then cacheSolve should retrieve the inverse from the cache.
makeCacheMatrix <- function(x = matrix()) {
x<- matrix(1:6, nrow=3, ncol=3)
cacheSolve <- function(x, ...) {
source("cachematrix.R)
cacheSolve(x)
getwd()
setwd("/Users/jonathanamoore/GitHub")
setwd("GitHub/ProgrammingAssignment2")
source("cachematrix.R")
x<- matrix(1:9, nrow=3, ncol=3)
cacheSolve(x)
x
inv
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x<- matrix(1:9, nrow=3, ncol=3, byrow=TRUE)
makeCacheMatrix()
cacheSolve(x)
cacheSolve(x)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x <- matrix(1:9, nrows=3, ncol=3, byrow=TRUE)
x<- matrix(1:9, nrow=3, ncol=3)
cacheSolve(x)
test = function(mat){
## @mat: an invertible matrix
temp = makeCacheMatrix(mat)
start.time = Sys.time()
cacheSolve(temp)
dur = Sys.time() - start.time
print(dur)
start.time = Sys.time()
cacheSolve(temp)
dur = Sys.time() - start.time
print(dur)
}
mat1 = matrix(1:9, nrow=3, ncol=3)
test(mat1)
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
x=c(2,-3,4, 1)
mat1= matrix(x, nrow=2, ncol=2)
cacheSolve(mat1)
test(mat1)
